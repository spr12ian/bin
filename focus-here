#!/bin/bash

# List of folders to check or clone
gitFolders=(
  ~/bin
  ~/projects/menu-planner
  ~/projects/our-finances
  ~/projects/spr12ian.github.io
  ~/projects/typescript-starter
)

for gitFolder in "${gitFolders[@]}"; do
  echo "Processing $gitFolder"

  parentFolder=$(dirname "$gitFolder")
  if [ ! -d "$parentFolder" ]; then
    echo "ERROR: $parentFolder folder does NOT exist"
    continue
  else
    echo "$parentFolder folder exists"
  fi

  if [ ! -d "$gitFolder" ]; then
    gitDir=$(basename "$gitFolder")
    echo "$gitFolder folder does NOT exist, cloning $gitDir..."
    # Try to clone the repository
    if git clone "https://github.com/spr12ian/${gitDir}.git" "$gitFolder"; then
      echo "Successfully cloned $gitDir"
    else
      echo "ERROR: Cloning $gitDir failed"
      continue
    fi
  fi

  # Change to git folder and pull latest changes
  if [ -d "$gitFolder" ]; then
    pushd "$gitFolder" > /dev/null || { echo "ERROR: Could not enter $gitFolder"; continue; }
    echo "Current directory: $(pwd)"
    echo "Pulling latest changes for $(basename "$gitFolder")..."
    
    # Pull the latest changes
    if git pull; then
      echo "Successfully pulled latest changes"
    else
      echo "ERROR: Failed to pull latest changes for $(basename "$gitFolder")"
    fi

    # Clean up ignored files if applicable
    if type remove-ignored-files-from-git >/dev/null 2>&1; then
      remove-ignored-files-from-git >/dev/null 2>&1
    else
      echo "remove-ignored-files-from-git command not found, skipping..."
    fi
    
    popd > /dev/null || { echo "ERROR: Could not return to previous directory"; exit 1; }
  else
    echo "ERROR: $gitFolder still does not exist after cloning"
  fi
done
